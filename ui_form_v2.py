# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'd:\SKIF\Skif_Utility\form_v2.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


ADC_FRAME_START = 0 # Начальный фрейм для анализа данных (можно начинать анализ с середины файла)
ADC_FRAME_NUMBER = 1800 # Кол-во двухсекундных фреймов (интервалов) в одном файле данных

ADC_FRAME_COUNT = 1800

from PyQt5 import QtCore, QtGui, QtWidgets


import sys, os, inspect
SCRIPT_DIR = os.path.abspath(os.path.dirname(inspect.getfile(inspect.currentframe())))
sys.path.append(os.path.dirname(SCRIPT_DIR))
'''
from vibe import PyOctaveBand
from vibe.read_signal import sig_avg
'''
# from Skif_Utility.adc_parse 
import adc_parse, diag_parse, sd_data_process


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(648, 491)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.adcButton = QtWidgets.QPushButton(self.centralwidget)
        self.adcButton.setGeometry(QtCore.QRect(40, 110, 80, 24))
        self.adcButton.setObjectName("adcButton")
        self.diagButton = QtWidgets.QPushButton(self.centralwidget)
        self.diagButton.setGeometry(QtCore.QRect(40, 150, 111, 24))
        self.diagButton.setObjectName("diagButton")
        self.sdCardReadButton = QtWidgets.QPushButton(self.centralwidget)
        self.sdCardReadButton.setGeometry(QtCore.QRect(40, 190, 111, 24))
        self.sdCardReadButton.setObjectName("sdCardReadButton")
        self.conLabel = QtWidgets.QLabel(self.centralwidget)
        self.conLabel.setGeometry(QtCore.QRect(290, 50, 91, 16))
        self.conLabel.setObjectName("conLabel")
        self.adcLabel = QtWidgets.QLabel(self.centralwidget)
        self.adcLabel.setGeometry(QtCore.QRect(190, 110, 91, 16))
        self.adcLabel.setObjectName("adcLabel")
        self.diagLabel = QtWidgets.QLabel(self.centralwidget)
        self.diagLabel.setGeometry(QtCore.QRect(190, 150, 91, 16))
        self.diagLabel.setObjectName("diagLabel")
        self.readLabel = QtWidgets.QLabel(self.centralwidget)
        self.readLabel.setGeometry(QtCore.QRect(190, 190, 91, 16))
        self.readLabel.setText("")
        self.readLabel.setObjectName("readLabel")
        self.splitter = QtWidgets.QSplitter(self.centralwidget)
        self.splitter.setGeometry(QtCore.QRect(40, 50, 160, 24))
        self.splitter.setOrientation(QtCore.Qt.Horizontal)
        self.splitter.setObjectName("splitter")
        self.connectButton = QtWidgets.QPushButton(self.splitter)
        self.connectButton.setObjectName("connectButton")
        self.disconnectButton = QtWidgets.QPushButton(self.splitter)
        self.disconnectButton.setObjectName("disconnectButton")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 648, 21))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        self.conBtnClicked()
        self.discBtnClicked()
        self.adcClicked()
        self.diagClicked()
        self.readClicked()

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.adcButton.setText(_translate("MainWindow", "ADC Parse"))
        self.diagButton.setText(_translate("MainWindow", "Diagnostics Parse"))
        self.sdCardReadButton.setText(_translate("MainWindow", "Read from SD Card"))
        self.conLabel.setText(_translate("MainWindow", "Disconnected"))
        self.adcLabel.setText(_translate("MainWindow", "Not Parsed"))
        self.diagLabel.setText(_translate("MainWindow", "Not Parsed"))
        self.connectButton.setText(_translate("MainWindow", "Connect"))
        self.disconnectButton.setText(_translate("MainWindow", "Disconnect"))

    def conBtnClicked(self):
        self.connectButton.clicked.connect(self.connect)

    def discBtnClicked(self):
        self.disconnectButton.clicked.connect(self.disconnect)

    def adcClicked(self):
        print("1")
        self.adcButton.clicked.connect(self.adcMain)
        self.adcLabel.setText("Parsed")

    def diagClicked(self):
        print("2")
        self.diagButton.clicked.connect(self.diagMain)
        self.diagLabel.setText("Parsed")

    def readClicked(self):
        print("3")
        self.sdCardReadButton.clicked.connect(self.sdRead)

    def connect(self):
        #Сейчас не реализованно
        #В скором времени будет устанваливать соедниение по ТСР связи для получения данных с gsm модема
        self.conLabel.setText("Connected")
    
    def disconnect(self):
        #Сейчас не реализованно
        #В скором времени будет разрвать соедниение с gsm модемом
        self.conLabel.setText("Disconnected")
    
    def adcMain(self):
        adc_parse.main(ADC_FRAME_START, ADC_FRAME_NUMBER)

    def diagMain(self):
        diag_parse.main(ADC_FRAME_COUNT)

    def sdRead(self):
        sd_data_process.func()


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())